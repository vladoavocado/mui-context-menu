{"version":3,"file":"mui-context-menu.cjs.production.min.js","sources":["../src/context/index.ts","../src/ui/IconText/index.tsx","../src/ui/MenuItem/index.tsx","../src/ui/Menu/index.tsx","../src/hooks/use-mui-context-menu.ts","../src/providers/index.tsx","../src/hooks/use-click-outside.ts"],"sourcesContent":["import { createContext } from 'react';\nimport { MenuAnchorRef, BaseMenuItemProps, MenuItemProps, ShrunkMenuProps } from '../types';\n\nexport type MUIContextMenuProps = {\n  setItems(items: MenuItemProps[]): void;\n  setMenuAnchorRef(ref: MenuAnchorRef): void;\n  setMenuProps(props: ShrunkMenuProps): void;\n  setMenuItemProps(props: BaseMenuItemProps | null): void;\n  menuAnchorEl: HTMLElement | null;\n};\n\nfunction noop() {\n  // eslint-disable-next-line no-console\n  console.info(\n    `Possibly you forgot to wrap your component with MUIContextMenuProvider.`,\n  );\n}\n\nexport const MUIContextMenu = createContext<MUIContextMenuProps>({\n  setItems: noop,\n  setMenuAnchorRef: noop,\n  setMenuProps: noop,\n  setMenuItemProps: noop,\n  menuAnchorEl: null,\n});\n","import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { Stack, Typography, TypographyProps } from '@mui/material';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\ntype IconTextProps = {\n  text: ReactNode;\n  startAdornment?: ReactNode;\n  endAdornment?: ReactNode;\n  hasChildren?: boolean;\n  textProps?: TypographyProps;\n};\n\nexport function IconText({\n  text,\n  startAdornment,\n  endAdornment,\n  hasChildren,\n  textProps,\n}: IconTextProps) {\n  if (typeof text !== 'string') {\n    return <>{text}</>;\n  }\n\n  return (\n    <Stack\n      flexDirection='row'\n      gap={2}\n      justifyContent='space-between'\n      sx={{ width: '100%' }}\n    >\n      <Stack gap={1} alignItems='center' flexDirection='row'>\n        {startAdornment}\n        <Typography {...textProps}>{text}</Typography>\n        {endAdornment}\n      </Stack>\n      {hasChildren && <ChevronRightIcon />}\n    </Stack>\n  );\n}\n","import * as React from 'react';\nimport { MouseEventHandler, ReactNode } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport { Box } from '@mui/material';\nimport { BaseMenuItemProps } from '../../types';\n\ntype MenuItemProps = {\n  onMouseEnter: MouseEventHandler<HTMLElement>;\n  onMouseLeave: MouseEventHandler<HTMLElement>;\n  isHighlighted?: boolean;\n  isTextComponent?: boolean;\n  highlight?: boolean;\n  children?: ReactNode;\n} & BaseMenuItemProps;\n\nexport function MenuItem({\n  onMouseEnter,\n  onMouseLeave,\n  isHighlighted,\n  isTextComponent,\n  highlight = true,\n  children,\n  ...props\n}: MenuItemProps) {\n\n  return (\n    <Box\n      {...props}\n      sx={[({ palette }) => ({\n        px: 2,\n        py: 1,\n        width: '100%',\n        pointerEvents: 'all',\n        backgroundColor:\n          isHighlighted && highlight\n            ? alpha(palette.primary.light, 0.2)\n            : 'transparent',\n\n        '&:hover': {\n          backgroundColor:\n            isTextComponent || highlight\n              ? alpha(palette.primary.light, 0.2)\n              : 'transparent',\n          cursor: 'default',\n        },\n      }), ...(Array.isArray(props.sx) ? props.sx : [props.sx])]}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      {children}\n    </Box>\n  );\n}\n\n// event => openMenu(id, event)\n","import * as React from 'react';\nimport { useRef, useState, MouseEvent, MouseEventHandler, useEffect } from 'react';\nimport { Menu as BaseMenu, SxProps } from '@mui/material';\nimport { BaseMenuItemProps, MenuItemProps, ShrunkMenuProps } from '../../types';\nimport { IconText } from '../IconText';\nimport { MenuItem } from '../MenuItem';\n\ntype MenuProps = {\n  items: MenuItemProps[];\n  parentIndex: string;\n  menuAnchorEl?: HTMLElement | null;\n  menuProps?: ShrunkMenuProps | null;\n  menuItemProps?: BaseMenuItemProps | null;\n  onAddRef?: (ref: HTMLElement) => void;\n  onClose?: () => void;\n  sx?: SxProps;\n};\n\nexport function Menu({\n  items,\n  onClose,\n  onAddRef,\n  menuProps,\n  menuAnchorEl,\n  menuItemProps,\n  parentIndex,\n  sx,\n}: MenuProps) {\n  const [openSubmenus, setOpenSubmenus] = useState<\n    Record<string, HTMLElement | null>\n  >({});\n\n  const anchorTimeouts = useRef<Record<string, NodeJS.Timeout | null>>({});\n\n  const closeMenu = (id: string) => {\n    anchorTimeouts.current[id] = setTimeout(() => {\n      setOpenSubmenus(prevState => ({\n        ...prevState,\n        [id]: null,\n      }));\n\n      anchorTimeouts.current[id] = null;\n    }, 300);\n  };\n\n  const openMenu = (id: string, event: MouseEvent<HTMLElement>) => {\n    if (anchorTimeouts.current[id]) {\n      clearTimeout(anchorTimeouts.current[id]!);\n      anchorTimeouts.current[id] = null;\n    }\n\n    setOpenSubmenus({\n      [id]: event!.currentTarget,\n    });\n  };\n\n  useEffect(() => {\n    if (!menuAnchorEl) {\n      setOpenSubmenus({});\n    }\n  }, [menuAnchorEl]);\n\n  return (\n    <BaseMenu\n      ref={ref => {\n        if (ref) {\n          onAddRef?.(ref);\n        }\n      }}\n      open={Boolean(menuAnchorEl)}\n      anchorEl={menuAnchorEl}\n      anchorOrigin={\n        menuProps?.anchorOrigin ?? {\n          vertical: 'center',\n          horizontal: 'center',\n        }\n      }\n      transformOrigin={\n        menuProps?.transformOrigin ?? {\n          vertical: 'top',\n          horizontal: 'right',\n        }\n      }\n      sx={{\n        padding: '1em',\n        pointerEvents: 'none',\n\n        '& .MuiList-root': {\n          p: 0,\n        },\n        ...sx,\n      }}\n      disableAutoFocus\n      disableEnforceFocus\n      onMouseLeave={() => {\n        if (!openSubmenus[parentIndex]) {\n          onClose?.();\n        }\n      }}\n    >\n      {items.map(\n        (\n          {\n            text,\n            children,\n            textProps,\n            highlight,\n            startAdornment,\n            endAdornment,\n          },\n          index,\n        ) => {\n          const id = `${parentIndex}-${index}`;\n          const onMouseEnter: MouseEventHandler<HTMLElement> = (event) => openMenu(id, event);\n          const onMouseLeave: MouseEventHandler<HTMLElement> = () => {\n            if (openSubmenus[id] && children) {\n              closeMenu(id);\n            }\n          };\n\n          return (\n            <MenuItem\n              {...menuItemProps}\n              key={id}\n              highlight={highlight}\n              isHighlighted={Boolean(openSubmenus[id] && items.length > 1)}\n              isTextComponent={typeof text === 'string'}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n            >\n              <IconText\n                text={text}\n                hasChildren={(children?.length ?? 0) >= 1}\n                textProps={textProps}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n              />\n              {children && (\n                <Menu\n                  items={children}\n                  menuAnchorEl={openSubmenus[id]}\n                  parentIndex={id}\n                  onAddRef={onAddRef}\n                  menuItemProps={menuItemProps}\n                  menuProps={menuProps}\n                  sx={{\n                    pointerEvents: 'none',\n\n                    '& .MuiMenuItem-root': {\n                      pointerEvents: 'auto',\n                    },\n                  }}\n                />\n              )}\n            </MenuItem>\n          );\n        },\n      )}\n    </BaseMenu>\n  );\n}\n","import { useContext } from 'react';\nimport { MUIContextMenu } from '../context';\nimport { BaseMenuItemProps, MenuAnchorRef, MenuItemProps, ShrunkMenuProps } from '../types';\n\nexport type MUIContextMenuHookProps = {\n  items: MenuItemProps[];\n  anchorRef: MenuAnchorRef;\n  menuProps?: ShrunkMenuProps;\n  menuItemProps?: BaseMenuItemProps;\n};\n\nexport const useMUIContextMenu = ({\n  items,\n  anchorRef,\n  menuProps,\n  menuItemProps,\n}: MUIContextMenuHookProps) => {\n  const { setItems, setMenuAnchorRef, setMenuProps, setMenuItemProps } =\n    useContext(MUIContextMenu);\n\n  return {\n    show() {\n      setItems(items);\n\n      if (menuItemProps) {\n        setMenuItemProps(menuItemProps)\n      }\n\n      if (menuProps) {\n        setMenuProps(menuProps);\n      }\n\n      setMenuAnchorRef(anchorRef);\n    },\n    hide() {\n      setMenuAnchorRef(null);\n    },\n  };\n};\n","import * as React from 'react';\nimport { useMemo, useRef, useState } from 'react';\nimport { MUIContextMenu } from '../context';\nimport { Menu } from '../ui/Menu';\nimport { MenuItemProps, ShrunkMenuProps, BaseMenuItemProps } from '../types';\nimport { useClickOutside } from '../hooks';\n\ntype MUIContextMenuProviderProps = {};\n\nexport const withMUIContextMenuProvider = (\n  Component: (props: any) => JSX.Element | null,\n) =>\n  function MUIContextMenuProvider(props: MUIContextMenuProviderProps) {\n    const [items, setItems] = useState<MenuItemProps[]>([]);\n    const [menuAnchorEl, setMenuAnchorRef] = useState<HTMLElement | null>(null);\n    const [menuProps, setMenuProps] = useState<ShrunkMenuProps | null>(null);\n    const [menuItemProps, setMenuItemProps] = useState<BaseMenuItemProps | null>(null);\n    const submenuRefs = useRef<HTMLElement[]>([]);\n\n    const contextApi = useMemo(\n      () => ({\n        setItems,\n        setMenuAnchorRef,\n        setMenuItemProps,\n        setMenuProps,\n        menuAnchorEl,\n      }),\n      [],\n    );\n\n    useClickOutside(submenuRefs?.current, () => setMenuAnchorRef(null));\n\n    return (\n      <MUIContextMenu.Provider value={contextApi}>\n        <Component {...props} />\n        <Menu\n          items={items}\n          parentIndex='0'\n          menuAnchorEl={menuAnchorEl}\n          menuProps={menuProps}\n          menuItemProps={menuItemProps}\n          onClose={() => setMenuAnchorRef(null)}\n          onAddRef={(ref: HTMLElement) => {\n            if (!submenuRefs.current.includes(ref)) {\n              submenuRefs.current.push(ref);\n            }\n          }}\n        />\n      </MUIContextMenu.Provider>\n    );\n  };\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (\n  anchors: HTMLElement[],\n  onClose: () => void,\n) => {\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent | Event) {\n      if (!anchors) {\n        return;\n      }\n\n      const isClickInside = anchors.some(ref =>\n        ref?.contains(event.target as Node),\n      );\n\n      if (!isClickInside) {\n        onClose?.();\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [anchors, onClose]);\n};\n"],"names":["noop","console","info","MUIContextMenu","createContext","setItems","setMenuAnchorRef","setMenuProps","setMenuItemProps","menuAnchorEl","IconText","_ref","text","startAdornment","endAdornment","hasChildren","textProps","React","Stack","flexDirection","gap","justifyContent","sx","width","alignItems","Typography","ChevronRightIcon","MenuItem","onMouseEnter","onMouseLeave","isHighlighted","isTextComponent","_ref$highlight","highlight","children","props","_objectWithoutPropertiesLoose","_excluded","Box","_ref2","palette","px","py","pointerEvents","backgroundColor","alpha","primary","light","&:hover","cursor","concat","Array","isArray","Menu","items","onClose","onAddRef","menuProps","menuItemProps","parentIndex","_useState","useState","openSubmenus","setOpenSubmenus","anchorTimeouts","useRef","useEffect","BaseMenu","ref","open","Boolean","anchorEl","anchorOrigin","_menuProps$anchorOrig","vertical","horizontal","transformOrigin","_menuProps$transformO","_extends","padding","& .MuiList-root","p","disableAutoFocus","disableEnforceFocus","map","_ref3","index","id","key","length","event","current","clearTimeout","_setOpenSubmenus","currentTarget","openMenu","setTimeout","prevState","_extends2","closeMenu","_children$length","& .MuiMenuItem-root","anchorRef","_useContext","useContext","show","hide","Component","anchors","_useState2","_useState3","_useState4","submenuRefs","contextApi","useMemo","handleClickOutside","some","contains","target","document","addEventListener","removeEventListener","Provider","value","includes","push"],"mappings":"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"}